{"ast":null,"code":"var _jsxFileName = \"/Users/youssefhany/Desktop/Personal Projects/atomica-api/client/src/components/CommentForm/CommentForm.js\",\n  _s = $RefreshSig$();\n// CommentForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './CommentForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  postId,\n  onCommentAdded\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [author, setAuthor] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.post(`/comments/${postId}`, {\n        text,\n        author\n      });\n      const commentData = {\n        text: data.data.comment.text,\n        author: data.data.comment.author,\n        _id: data.data.comment._id,\n        createdAt: data.data.comment.createdAt\n      };\n      onCommentAdded(commentData);\n      setText('');\n      setAuthor('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"comment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      placeholder: \"Your name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Write a comment...\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"LIQ7ZJc1d/guJL6vEB3vDoqlVkw=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CommentForm","postId","onCommentAdded","_s","text","setText","author","setAuthor","handleSubmit","e","preventDefault","data","post","commentData","comment","_id","createdAt","error","console","onSubmit","className","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/youssefhany/Desktop/Personal Projects/atomica-api/client/src/components/CommentForm/CommentForm.js"],"sourcesContent":["// CommentForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nimport './CommentForm.css';\n\nconst CommentForm = ({ postId, onCommentAdded }) => {\n  const [text, setText] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.post(`/comments/${postId}`, { text, author });\n      const commentData = { text: data.data.comment.text, author: data.data.comment.author, _id: data.data.comment._id, createdAt: data.data.comment.createdAt };\n      onCommentAdded(commentData);\n      setText('');\n      setAuthor('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"comment-form\">\n      <input\n        type=\"text\"\n        value={author}\n        onChange={(e) => setAuthor(e.target.value)}\n        placeholder=\"Your name\"\n        required\n      />\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        placeholder=\"Write a comment...\"\n        required\n      />\n      <button type=\"submit\">Add Comment</button>\n    </form>\n  );\n};\n\nexport default CommentForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAE,aAAYX,MAAO,EAAC,EAAE;QAAEG,IAAI;QAAEE;MAAO,CAAC,CAAC;MAC1E,MAAMO,WAAW,GAAG;QAAET,IAAI,EAAEO,IAAI,CAACA,IAAI,CAACG,OAAO,CAACV,IAAI;QAAEE,MAAM,EAAEK,IAAI,CAACA,IAAI,CAACG,OAAO,CAACR,MAAM;QAAES,GAAG,EAAEJ,IAAI,CAACA,IAAI,CAACG,OAAO,CAACC,GAAG;QAAEC,SAAS,EAAEL,IAAI,CAACA,IAAI,CAACG,OAAO,CAACE;MAAU,CAAC;MAC1Jd,cAAc,CAACW,WAAW,CAAC;MAC3BR,OAAO,CAAC,EAAE,CAAC;MACXE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACElB,OAAA;IAAMoB,QAAQ,EAAEX,YAAa;IAACY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACpDtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,MAAO;MACdkB,QAAQ,EAAGf,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MAC3CG,WAAW,EAAC,WAAW;MACvBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFhC,OAAA;MACEwB,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGf,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,oBAAoB;MAChCC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFhC,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAnCIH,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}